// ------------  Paquete e importaciones ------------
package statpy;

import java_cup.runtime.*;
import clases.Erroor;
import func.Funcion;
import traductionPy.indentPy;
import java.util.LinkedList; 


//------> Codigo para el parser
//------> Declaracion de variables, funciones y funciones de error

parser code 
{:
    public static String resultado = ""; 

    public void syntax_error(Symbol s)
    {       
            Erroor errorsito = new Erroor("Sintactico", s.value.toString() ,"No es valido en este lenguaje sintact", s.right, s.left);
            Funcion.ErrorList.add(errorsito);
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Recuperado" );        
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {       
            Erroor errorsito = new Erroor("Sintactico", s.value.toString() ,"No es valido en este lenguaje sintact", s.right, s.left);
            Funcion.ErrorList.add(errorsito);
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Sin recuperacion." );
    }

:}


//------> Codigo para las acciones gramaticales (no tocar)
action code
{:  :}


//------> Declaración de terminales
terminal String TkENTERO, TkDECIMAL ,TkCOMENTmULTI, TkCOMENTnORMAL,TkCADENA,TkErChar;
terminal String TkSUMA,R_MOSTRAR,TkMULTIPLICACION,TkRESTA,TkDIVISION,TkIGUAL;
terminal String TkPUNTOYCOMA,TkDOSPUNTOS,TkPUNTO,TkCOMA;
terminal String TkLLAVEA,TkLLAVEC,TkPARENTESISAbre,TkPARENTESISCierra,TkCORCHETEAbre,TkCORCHETECierra;
terminal String TkMAYORQUE, TkMENORQUE, TkMAYORIGUAL, TkMENORIGUAL,TkIGUALIGUAL,TkSignoDolar;
terminal String TkAND,TkOR, TkNOT,TkIncremento;
terminal String TkINT_R,TkDOUBLE_R,TkCHAR_R,TkBOOL_R,TkSTRING_R;
terminal String TkVOID_R,TkMAIN_R;
terminal String TkIF_R, TkELSE_R, TkCASE_R,TkBRAKE_R,TkDEFAULT_R;
terminal String TkCONSOLE_R,TkWRITE_R;
terminal String TkFOR_R, TkDO_R,TkWHILE_R;
terminal String TkDEFINIR_GLOBALES_R,TkGRAFICA_BARRAS_R,TkGRAFICA_PIE_R, TkNewValor;


//------> Declaración de no terminales
non terminal inicio;
non terminal LinkedList instruccionTraduccion;
non terminal instruccionGraficas;
non terminal listainstrTraduccion, listainstrGraficas;
non terminal expresionTraduccion, expresionGraficas;
non terminal comentario_linea;
non terminal comentario_multilinea;
non terminal consolewrite;

//------> PRECEDENCIA
precedence left TkSUMA, TkRESTA;
precedence left TkMULTIPLICACION, TkDIVISION;


//------> Definir Simbolo Inicial
start with inicio; 


// ------------>  Producciones  <------------



inicio::= TkVOID_R TkPARENTESISAbre  TkPARENTESISCierra  TkLLAVEA  listainstrTraduccion: lista TkLLAVEC
                            {:   
                                func.Funcion.ListaTraducccionPy = lista;
                                
                            :}
;

listainstrTraduccion ::= listainstrTraduccion:lista  instruccionTraduccion: val 
                                                            {: 
                                                                lista.addAll(LinkedList)val;
                                                                RESULT = (LinkedList) lista;
                                                            :}
                        | instruccionTraduccion:val            
                                                            {:
                                                                LinkedList<String> lista = new LinkedList<>();
                                                                lista.addAll((LinkedList)val);
                                                                RESULT = (LinkedList) lista;
                                                            :}
                        | error TkPUNTOYCOMA
;

 